Loading level 2...
Score, Timer, Portal state reset.
Level timer reset to 200.0 seconds.
Found hidden item 'b' at (13, 5)
Found hidden item 's' at (5, 9)
Found hidden item 'l' at (18, 13)
Loaded 3 hidden items from map data.
Creating Player at grid (1, 1)
Tile at (1, 1) changed to EMPTY for Player.
Found Balloom at grid (14, 1)
Tile at (14, 1) changed to EMPTY for Enemy.
Found Doll at grid (7, 3)
Tile at (7, 3) changed to EMPTY for Enemy.
Found hidden Item ('b') at grid (13, 5). Initial tile is Brick. Item will spawn after destruction.
Found Ghost at grid (27, 5)
Tile at (27, 5) changed to EMPTY for Enemy.
Found hidden Item ('s') at grid (5, 9). Initial tile is Brick. Item will spawn after destruction.
Found Minvo at grid (17, 9)
Tile at (17, 9) changed to EMPTY for Enemy.
Found Kondoria at grid (27, 11)
Tile at (27, 11) changed to EMPTY for Enemy.
Found hidden Item ('l') at grid (18, 13). Initial tile is Brick. Item will spawn after destruction.
Portal found and position stored at (29, 13)
Level 2 loaded successfully.
Portal Activated!







 public void handlePortalTransition(){
         if (player != null && player.isAlive() && portalActivated && portalGridX != -1) {
             int playerCurrentGridX = player.getGridX();
             int playerCurrentGridY = player.getGridY();

             if (playerCurrentGridX == portalGridX && playerCurrentGridY == portalGridY) {

                 System.out.println("Player entered portal! (Stored Grid Coordinates Match)");

                 if (levelTimeRemaining > 0) { // Cộng điểm thời gian nếu còn
                     addScore((int)(levelTimeRemaining * 2));
                     System.out.println("Added time bonus score.");
                 }
                 addScore(1000); // Cộng điểm qua màn cố định
                 System.out.println("Added level clear bonus score.");

                 currentLevel++; // Tăng số level hiện tại

                 if (currentLevel <= MAX_LEVEL) { // Kiểm tra xem còn level để chơi không
                     System.out.println("Loading next level: " + currentLevel);
                     loadLevel(currentLevel); // Tải dữ liệu cho level mới
                     currentState = GameState.PLAYING;
                     System.out.println("State set back to PLAYING for new level.");
                 } else { // Đã hoàn thành level cuối cùng
                     System.out.println("CONGRATULATIONS! YOU BEAT THE GAME!");
                     // TODO: Chuyển sang trạng thái GAME_WON thay vì đóng cửa sổ
                     if (primaryStage != null) {
                         primaryStage.close(); // Đóng cửa sổ game
                     }
                 }
             }

         }
     }




